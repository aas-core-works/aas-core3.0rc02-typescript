/**
 * Test `typesMatch`.
 */

// This code has been automatically generated by:
// testgen/aas_core_3_0_rc2_typescript_testgen/generate_test_for_type_matching.py
// Do NOT edit or append.

import * as AasTypes from "../src/types";
import * as TestCommonJsonization from "./commonJsonization";

const THE_EXTENSION = TestCommonJsonization.loadMinimalExtension();

const THE_ADMINISTRATIVE_INFORMATION =
  TestCommonJsonization.loadMinimalAdministrativeInformation();

const THE_QUALIFIER = TestCommonJsonization.loadMinimalQualifier();

const THE_ASSET_ADMINISTRATION_SHELL =
  TestCommonJsonization.loadMinimalAssetAdministrationShell();

const THE_ASSET_INFORMATION = TestCommonJsonization.loadMinimalAssetInformation();

const THE_RESOURCE = TestCommonJsonization.loadMinimalResource();

const THE_SPECIFIC_ASSET_ID = TestCommonJsonization.loadMinimalSpecificAssetId();

const THE_SUBMODEL = TestCommonJsonization.loadMinimalSubmodel();

const THE_RELATIONSHIP_ELEMENT = TestCommonJsonization.loadMinimalRelationshipElement();

const THE_SUBMODEL_ELEMENT_LIST =
  TestCommonJsonization.loadMinimalSubmodelElementList();

const THE_SUBMODEL_ELEMENT_COLLECTION =
  TestCommonJsonization.loadMinimalSubmodelElementCollection();

const THE_PROPERTY = TestCommonJsonization.loadMinimalProperty();

const THE_MULTI_LANGUAGE_PROPERTY =
  TestCommonJsonization.loadMinimalMultiLanguageProperty();

const THE_RANGE = TestCommonJsonization.loadMinimalRange();

const THE_REFERENCE_ELEMENT = TestCommonJsonization.loadMinimalReferenceElement();

const THE_BLOB = TestCommonJsonization.loadMinimalBlob();

const THE_FILE = TestCommonJsonization.loadMinimalFile();

const THE_ANNOTATED_RELATIONSHIP_ELEMENT =
  TestCommonJsonization.loadMinimalAnnotatedRelationshipElement();

const THE_ENTITY = TestCommonJsonization.loadMinimalEntity();

const THE_EVENT_PAYLOAD = TestCommonJsonization.loadMinimalEventPayload();

const THE_BASIC_EVENT_ELEMENT = TestCommonJsonization.loadMinimalBasicEventElement();

const THE_OPERATION = TestCommonJsonization.loadMinimalOperation();

const THE_OPERATION_VARIABLE = TestCommonJsonization.loadMinimalOperationVariable();

const THE_CAPABILITY = TestCommonJsonization.loadMinimalCapability();

const THE_CONCEPT_DESCRIPTION = TestCommonJsonization.loadMinimalConceptDescription();

const THE_REFERENCE = TestCommonJsonization.loadMinimalReference();

const THE_KEY = TestCommonJsonization.loadMinimalKey();

const THE_LANG_STRING = TestCommonJsonization.loadMinimalLangString();

const THE_ENVIRONMENT = TestCommonJsonization.loadMinimalEnvironment();

const THE_EMBEDDED_DATA_SPECIFICATION =
  TestCommonJsonization.loadMinimalEmbeddedDataSpecification();

const THE_VALUE_REFERENCE_PAIR = TestCommonJsonization.loadMinimalValueReferencePair();

const THE_VALUE_LIST = TestCommonJsonization.loadMinimalValueList();

const THE_DATA_SPECIFICATION_IEC_61360 =
  TestCommonJsonization.loadMinimalDataSpecificationIec61360();

const THE_DATA_SPECIFICATION_PHYSICAL_UNIT =
  TestCommonJsonization.loadMinimalDataSpecificationPhysicalUnit();

test("type matches for Extension", () => {
  expect(AasTypes.typesMatch(THE_EXTENSION, THE_EXTENSION)).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_EXTENSION, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_QUALIFIER)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EXTENSION, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_ASSET_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_SPECIFIC_ASSET_ID)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_EXTENSION, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_PROPERTY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_REFERENCE_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EXTENSION, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EXTENSION, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EXTENSION, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EXTENSION, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EXTENSION, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for AdministrativeInformation", () => {
  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_EXTENSION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_QUALIFIER)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_RESOURCE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_SUBMODEL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_PROPERTY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_RANGE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_BLOB)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_FILE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(
      THE_ADMINISTRATIVE_INFORMATION,
      THE_ANNOTATED_RELATIONSHIP_ELEMENT
    )
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_ENTITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_EVENT_PAYLOAD)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_OPERATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_CAPABILITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_REFERENCE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_KEY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_LANG_STRING)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_ENVIRONMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ADMINISTRATIVE_INFORMATION, THE_VALUE_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_ADMINISTRATIVE_INFORMATION,
      THE_DATA_SPECIFICATION_IEC_61360
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_ADMINISTRATIVE_INFORMATION,
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT
    )
  ).toStrictEqual(false);
});

test("type matches for Qualifier", () => {
  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_EXTENSION)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_QUALIFIER, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_QUALIFIER)).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_QUALIFIER, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_ASSET_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_SPECIFIC_ASSET_ID)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_QUALIFIER, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_PROPERTY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_REFERENCE_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_QUALIFIER, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_QUALIFIER, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_QUALIFIER, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_QUALIFIER, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_QUALIFIER, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for AssetAdministrationShell", () => {
  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_EXTENSION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_QUALIFIER)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_RESOURCE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_SUBMODEL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_PROPERTY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_RANGE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_BLOB)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_FILE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(
      THE_ASSET_ADMINISTRATION_SHELL,
      THE_ANNOTATED_RELATIONSHIP_ELEMENT
    )
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_ENTITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_EVENT_PAYLOAD)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_OPERATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_CAPABILITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_REFERENCE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_KEY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_LANG_STRING)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_ENVIRONMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_ADMINISTRATION_SHELL, THE_VALUE_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_ASSET_ADMINISTRATION_SHELL,
      THE_DATA_SPECIFICATION_IEC_61360
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_ASSET_ADMINISTRATION_SHELL,
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT
    )
  ).toStrictEqual(false);
});

test("type matches for AssetInformation", () => {
  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_EXTENSION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_QUALIFIER)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_ASSET_INFORMATION)
  ).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_RESOURCE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_SUBMODEL)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_PROPERTY)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_RANGE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_EVENT_PAYLOAD)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_OPERATION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_CAPABILITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_REFERENCE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_LANG_STRING)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_ENVIRONMENT)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_VALUE_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ASSET_INFORMATION, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for Resource", () => {
  expect(AasTypes.typesMatch(THE_RESOURCE, THE_EXTENSION)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RESOURCE, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_QUALIFIER)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RESOURCE, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_ASSET_INFORMATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_RESOURCE)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_SPECIFIC_ASSET_ID)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_RESOURCE, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_PROPERTY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_REFERENCE_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RESOURCE, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RESOURCE, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RESOURCE, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RESOURCE, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RESOURCE, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for SpecificAssetId", () => {
  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_EXTENSION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_QUALIFIER)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_RESOURCE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_SUBMODEL)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_PROPERTY)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_RANGE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_EVENT_PAYLOAD)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_OPERATION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_CAPABILITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_REFERENCE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_LANG_STRING)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_ENVIRONMENT)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_VALUE_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SPECIFIC_ASSET_ID, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for Submodel", () => {
  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_EXTENSION)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_QUALIFIER)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_ASSET_INFORMATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_SPECIFIC_ASSET_ID)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_SUBMODEL)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_PROPERTY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_REFERENCE_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_SUBMODEL, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for RelationshipElement", () => {
  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_EXTENSION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_QUALIFIER)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_RESOURCE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_SUBMODEL)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_PROPERTY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_RANGE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_ENTITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_EVENT_PAYLOAD)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_OPERATION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_CAPABILITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_REFERENCE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_LANG_STRING)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_ENVIRONMENT)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_VALUE_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RELATIONSHIP_ELEMENT, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for SubmodelElementList", () => {
  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_EXTENSION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_QUALIFIER)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_RESOURCE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_SUBMODEL)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_PROPERTY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_RANGE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_ENTITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_EVENT_PAYLOAD)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_OPERATION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_CAPABILITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_REFERENCE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_LANG_STRING)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_ENVIRONMENT)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_VALUE_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_LIST, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for SubmodelElementCollection", () => {
  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_EXTENSION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_QUALIFIER)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_RESOURCE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_SUBMODEL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_SUBMODEL_ELEMENT_COLLECTION,
      THE_SUBMODEL_ELEMENT_COLLECTION
    )
  ).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_PROPERTY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_RANGE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_BLOB)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_FILE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(
      THE_SUBMODEL_ELEMENT_COLLECTION,
      THE_ANNOTATED_RELATIONSHIP_ELEMENT
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_ENTITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_EVENT_PAYLOAD)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_OPERATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_CAPABILITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_REFERENCE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_KEY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_LANG_STRING)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_ENVIRONMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_SUBMODEL_ELEMENT_COLLECTION,
      THE_EMBEDDED_DATA_SPECIFICATION
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_SUBMODEL_ELEMENT_COLLECTION, THE_VALUE_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_SUBMODEL_ELEMENT_COLLECTION,
      THE_DATA_SPECIFICATION_IEC_61360
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_SUBMODEL_ELEMENT_COLLECTION,
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT
    )
  ).toStrictEqual(false);
});

test("type matches for Property", () => {
  expect(AasTypes.typesMatch(THE_PROPERTY, THE_EXTENSION)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_PROPERTY, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_QUALIFIER)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_PROPERTY, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_ASSET_INFORMATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_SPECIFIC_ASSET_ID)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_PROPERTY, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_PROPERTY)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_REFERENCE_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_PROPERTY, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_PROPERTY, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_PROPERTY, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_PROPERTY, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_PROPERTY, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for MultiLanguageProperty", () => {
  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_EXTENSION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_QUALIFIER)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_RESOURCE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_SUBMODEL)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_PROPERTY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_RANGE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_BLOB)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_FILE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_ENTITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_EVENT_PAYLOAD)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_OPERATION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_CAPABILITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_REFERENCE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_KEY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_LANG_STRING)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_ENVIRONMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_VALUE_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_MULTI_LANGUAGE_PROPERTY, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_MULTI_LANGUAGE_PROPERTY,
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT
    )
  ).toStrictEqual(false);
});

test("type matches for Range", () => {
  expect(AasTypes.typesMatch(THE_RANGE, THE_EXTENSION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_ADMINISTRATIVE_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RANGE, THE_QUALIFIER)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_ASSET_ADMINISTRATION_SHELL)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RANGE, THE_ASSET_INFORMATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_SPECIFIC_ASSET_ID)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RANGE, THE_SUBMODEL_ELEMENT_COLLECTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RANGE, THE_PROPERTY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RANGE, THE_RANGE)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_RANGE, THE_REFERENCE_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RANGE, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_OPERATION_VARIABLE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_CONCEPT_DESCRIPTION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_EMBEDDED_DATA_SPECIFICATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_RANGE, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_RANGE, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RANGE, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_RANGE, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for ReferenceElement", () => {
  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_EXTENSION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_QUALIFIER)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_RESOURCE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_SUBMODEL)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_PROPERTY)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_RANGE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_EVENT_PAYLOAD)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_OPERATION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_CAPABILITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_REFERENCE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_LANG_STRING)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_ENVIRONMENT)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_VALUE_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE_ELEMENT, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for Blob", () => {
  expect(AasTypes.typesMatch(THE_BLOB, THE_EXTENSION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_ADMINISTRATIVE_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_BLOB, THE_QUALIFIER)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_ASSET_ADMINISTRATION_SHELL)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_BLOB, THE_ASSET_INFORMATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_SPECIFIC_ASSET_ID)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_SUBMODEL_ELEMENT_COLLECTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_BLOB, THE_PROPERTY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_BLOB, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_REFERENCE_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_BLOB)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_BLOB, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_BLOB, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_OPERATION_VARIABLE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_CONCEPT_DESCRIPTION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_EMBEDDED_DATA_SPECIFICATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_BLOB, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_VALUE_LIST)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BLOB, THE_DATA_SPECIFICATION_IEC_61360)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_BLOB, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for File", () => {
  expect(AasTypes.typesMatch(THE_FILE, THE_EXTENSION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_ADMINISTRATIVE_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_FILE, THE_QUALIFIER)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_ASSET_ADMINISTRATION_SHELL)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_FILE, THE_ASSET_INFORMATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_SPECIFIC_ASSET_ID)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_SUBMODEL_ELEMENT_COLLECTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_FILE, THE_PROPERTY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_FILE, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_REFERENCE_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_FILE)).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_FILE, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_OPERATION_VARIABLE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_CONCEPT_DESCRIPTION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_EMBEDDED_DATA_SPECIFICATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_FILE, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_VALUE_LIST)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_FILE, THE_DATA_SPECIFICATION_IEC_61360)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_FILE, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for AnnotatedRelationshipElement", () => {
  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_EXTENSION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_ANNOTATED_RELATIONSHIP_ELEMENT,
      THE_ADMINISTRATIVE_INFORMATION
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_QUALIFIER)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_ANNOTATED_RELATIONSHIP_ELEMENT,
      THE_ASSET_ADMINISTRATION_SHELL
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_RESOURCE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_SUBMODEL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_ANNOTATED_RELATIONSHIP_ELEMENT,
      THE_SUBMODEL_ELEMENT_COLLECTION
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_PROPERTY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_RANGE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_BLOB)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_FILE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_ANNOTATED_RELATIONSHIP_ELEMENT,
      THE_ANNOTATED_RELATIONSHIP_ELEMENT
    )
  ).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_ENTITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_EVENT_PAYLOAD)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_OPERATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_CAPABILITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_REFERENCE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_KEY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_LANG_STRING)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_ENVIRONMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_ANNOTATED_RELATIONSHIP_ELEMENT,
      THE_EMBEDDED_DATA_SPECIFICATION
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ANNOTATED_RELATIONSHIP_ELEMENT, THE_VALUE_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_ANNOTATED_RELATIONSHIP_ELEMENT,
      THE_DATA_SPECIFICATION_IEC_61360
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_ANNOTATED_RELATIONSHIP_ELEMENT,
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT
    )
  ).toStrictEqual(false);
});

test("type matches for Entity", () => {
  expect(AasTypes.typesMatch(THE_ENTITY, THE_EXTENSION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_ADMINISTRATIVE_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENTITY, THE_QUALIFIER)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_ASSET_ADMINISTRATION_SHELL)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENTITY, THE_ASSET_INFORMATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_SPECIFIC_ASSET_ID)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENTITY, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ENTITY, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_PROPERTY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENTITY, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_REFERENCE_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ENTITY, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_ENTITY)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_OPERATION_VARIABLE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_CONCEPT_DESCRIPTION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ENTITY, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENTITY, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENTITY, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ENTITY, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ENTITY, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for EventPayload", () => {
  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_EXTENSION)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_QUALIFIER)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_ASSET_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_SPECIFIC_ASSET_ID)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_SUBMODEL)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_PROPERTY)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_REFERENCE_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_EVENT_PAYLOAD)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EVENT_PAYLOAD, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for BasicEventElement", () => {
  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_EXTENSION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_QUALIFIER)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_RESOURCE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_SUBMODEL)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_PROPERTY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_RANGE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_EVENT_PAYLOAD)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_OPERATION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_CAPABILITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_REFERENCE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_LANG_STRING)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_ENVIRONMENT)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_VALUE_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_BASIC_EVENT_ELEMENT, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for Operation", () => {
  expect(AasTypes.typesMatch(THE_OPERATION, THE_EXTENSION)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_QUALIFIER)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_ASSET_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_OPERATION, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_SPECIFIC_ASSET_ID)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_OPERATION, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_OPERATION, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_OPERATION, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_PROPERTY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_OPERATION, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_REFERENCE_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_OPERATION, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_OPERATION, THE_OPERATION)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_OPERATION, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_OPERATION, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_OPERATION, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for OperationVariable", () => {
  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_EXTENSION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_QUALIFIER)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_RESOURCE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_SUBMODEL)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_PROPERTY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_RANGE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_EVENT_PAYLOAD)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_OPERATION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_OPERATION_VARIABLE)
  ).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_CAPABILITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_REFERENCE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_LANG_STRING)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_ENVIRONMENT)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_VALUE_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_OPERATION_VARIABLE, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for Capability", () => {
  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_EXTENSION)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CAPABILITY, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_QUALIFIER)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CAPABILITY, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_ASSET_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_SPECIFIC_ASSET_ID)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_CAPABILITY, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_PROPERTY)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CAPABILITY, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_REFERENCE_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CAPABILITY, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_CAPABILITY)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CAPABILITY, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_CAPABILITY, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CAPABILITY, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CAPABILITY, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for ConceptDescription", () => {
  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_EXTENSION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_QUALIFIER)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_RESOURCE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_SUBMODEL)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_PROPERTY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_RANGE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_EVENT_PAYLOAD)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_OPERATION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_CAPABILITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_REFERENCE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_LANG_STRING)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_ENVIRONMENT)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_VALUE_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_CONCEPT_DESCRIPTION, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for Reference", () => {
  expect(AasTypes.typesMatch(THE_REFERENCE, THE_EXTENSION)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_QUALIFIER)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_ASSET_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_SPECIFIC_ASSET_ID)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_REFERENCE, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_PROPERTY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_REFERENCE_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_REFERENCE)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_REFERENCE, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_REFERENCE, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for Key", () => {
  expect(AasTypes.typesMatch(THE_KEY, THE_EXTENSION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_ADMINISTRATIVE_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_KEY, THE_QUALIFIER)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_ASSET_ADMINISTRATION_SHELL)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_KEY, THE_ASSET_INFORMATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_SPECIFIC_ASSET_ID)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_SUBMODEL_ELEMENT_COLLECTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_KEY, THE_PROPERTY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_MULTI_LANGUAGE_PROPERTY)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_KEY, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_REFERENCE_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_KEY, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_OPERATION_VARIABLE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_CONCEPT_DESCRIPTION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_KEY)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_KEY, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_EMBEDDED_DATA_SPECIFICATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_KEY, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_VALUE_LIST)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_KEY, THE_DATA_SPECIFICATION_IEC_61360)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_KEY, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for LangString", () => {
  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_EXTENSION)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_LANG_STRING, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_QUALIFIER)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_LANG_STRING, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_ASSET_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_SPECIFIC_ASSET_ID)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_LANG_STRING, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_PROPERTY)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_LANG_STRING, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_REFERENCE_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_LANG_STRING, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_LANG_STRING)).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_LANG_STRING, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_LANG_STRING, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_LANG_STRING, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_LANG_STRING, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for Environment", () => {
  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_EXTENSION)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ENVIRONMENT, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_QUALIFIER)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ENVIRONMENT, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_ASSET_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_SPECIFIC_ASSET_ID)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_ENVIRONMENT, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_PROPERTY)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ENVIRONMENT, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_REFERENCE_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ENVIRONMENT, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_ENVIRONMENT)).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_ENVIRONMENT, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_ENVIRONMENT, THE_VALUE_LIST)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ENVIRONMENT, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_ENVIRONMENT, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for EmbeddedDataSpecification", () => {
  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_EXTENSION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_QUALIFIER)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_RESOURCE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_SUBMODEL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_EMBEDDED_DATA_SPECIFICATION,
      THE_SUBMODEL_ELEMENT_COLLECTION
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_PROPERTY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_RANGE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_BLOB)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_FILE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(
      THE_EMBEDDED_DATA_SPECIFICATION,
      THE_ANNOTATED_RELATIONSHIP_ELEMENT
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_ENTITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_EVENT_PAYLOAD)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_OPERATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_CAPABILITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_REFERENCE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_KEY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_LANG_STRING)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_ENVIRONMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_EMBEDDED_DATA_SPECIFICATION,
      THE_EMBEDDED_DATA_SPECIFICATION
    )
  ).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_EMBEDDED_DATA_SPECIFICATION, THE_VALUE_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_EMBEDDED_DATA_SPECIFICATION,
      THE_DATA_SPECIFICATION_IEC_61360
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_EMBEDDED_DATA_SPECIFICATION,
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT
    )
  ).toStrictEqual(false);
});

test("type matches for ValueReferencePair", () => {
  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_EXTENSION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_QUALIFIER)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_RESOURCE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_SUBMODEL)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_PROPERTY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_RANGE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_ENTITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_EVENT_PAYLOAD)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_OPERATION)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_CAPABILITY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_REFERENCE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_LANG_STRING)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_ENVIRONMENT)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(true);

  expect(AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_VALUE_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_REFERENCE_PAIR, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for ValueList", () => {
  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_EXTENSION)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_LIST, THE_ADMINISTRATIVE_INFORMATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_QUALIFIER)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_LIST, THE_ASSET_ADMINISTRATION_SHELL)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_ASSET_INFORMATION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_RESOURCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_SPECIFIC_ASSET_ID)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_SUBMODEL)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_RELATIONSHIP_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_SUBMODEL_ELEMENT_LIST)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_VALUE_LIST, THE_SUBMODEL_ELEMENT_COLLECTION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_PROPERTY)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_LIST, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_RANGE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_REFERENCE_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_BLOB)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_FILE)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_LIST, THE_ANNOTATED_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_ENTITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_EVENT_PAYLOAD)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_BASIC_EVENT_ELEMENT)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_OPERATION)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_OPERATION_VARIABLE)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_CAPABILITY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_CONCEPT_DESCRIPTION)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_REFERENCE)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_KEY)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_LANG_STRING)).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_ENVIRONMENT)).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_LIST, THE_EMBEDDED_DATA_SPECIFICATION)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_VALUE_REFERENCE_PAIR)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_VALUE_LIST, THE_VALUE_LIST)).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(THE_VALUE_LIST, THE_DATA_SPECIFICATION_IEC_61360)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_VALUE_LIST, THE_DATA_SPECIFICATION_PHYSICAL_UNIT)
  ).toStrictEqual(false);
});

test("type matches for DataSpecificationIec61360", () => {
  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_EXTENSION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_IEC_61360,
      THE_ADMINISTRATIVE_INFORMATION
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_QUALIFIER)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_IEC_61360,
      THE_ASSET_ADMINISTRATION_SHELL
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_RESOURCE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_SUBMODEL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_IEC_61360,
      THE_SUBMODEL_ELEMENT_COLLECTION
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_PROPERTY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_MULTI_LANGUAGE_PROPERTY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_RANGE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_BLOB)).toStrictEqual(
    false
  );

  expect(AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_FILE)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_IEC_61360,
      THE_ANNOTATED_RELATIONSHIP_ELEMENT
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_ENTITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_EVENT_PAYLOAD)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_OPERATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_CAPABILITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_REFERENCE)
  ).toStrictEqual(false);

  expect(AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_KEY)).toStrictEqual(
    false
  );

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_LANG_STRING)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_ENVIRONMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_IEC_61360,
      THE_EMBEDDED_DATA_SPECIFICATION
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_IEC_61360, THE_VALUE_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_IEC_61360,
      THE_DATA_SPECIFICATION_IEC_61360
    )
  ).toStrictEqual(true);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_IEC_61360,
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT
    )
  ).toStrictEqual(false);
});

test("type matches for DataSpecificationPhysicalUnit", () => {
  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_EXTENSION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT,
      THE_ADMINISTRATIVE_INFORMATION
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_QUALIFIER)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT,
      THE_ASSET_ADMINISTRATION_SHELL
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_ASSET_INFORMATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_RESOURCE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_SPECIFIC_ASSET_ID)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_SUBMODEL)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_RELATIONSHIP_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_SUBMODEL_ELEMENT_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT,
      THE_SUBMODEL_ELEMENT_COLLECTION
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_PROPERTY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT,
      THE_MULTI_LANGUAGE_PROPERTY
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_RANGE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_REFERENCE_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_BLOB)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_FILE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT,
      THE_ANNOTATED_RELATIONSHIP_ELEMENT
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_ENTITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_EVENT_PAYLOAD)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_BASIC_EVENT_ELEMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_OPERATION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_OPERATION_VARIABLE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_CAPABILITY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_CONCEPT_DESCRIPTION)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_REFERENCE)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_KEY)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_LANG_STRING)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_ENVIRONMENT)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT,
      THE_EMBEDDED_DATA_SPECIFICATION
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_VALUE_REFERENCE_PAIR)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(THE_DATA_SPECIFICATION_PHYSICAL_UNIT, THE_VALUE_LIST)
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT,
      THE_DATA_SPECIFICATION_IEC_61360
    )
  ).toStrictEqual(false);

  expect(
    AasTypes.typesMatch(
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT,
      THE_DATA_SPECIFICATION_PHYSICAL_UNIT
    )
  ).toStrictEqual(true);
});

// This code has been automatically generated by:
// testgen/aas_core_3_0_rc2_typescript_testgen/generate_test_for_type_matching.py
// Do NOT edit or append.
